@keyframes modalBounceIn {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes modalBounceOut {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0;
    transform: scale(0.8);
  }
}

.modal {
  display: none; /* Hidden by default */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  z-index: 1000;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.modal.show {
  display: flex; /* Show the modal when the class 'show' is added */
  animation: modalBounceIn 0.5s ease-out;
}

.modal.hide {
  animation: modalBounceOut 0.5s ease-out;
}

.modalContent {
  background-color: white;
  width: 1200px; /* Set modal width */
  min-height: 600px;
  height: fit-content;
  padding: 20px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  position: relative;
  padding: 45px 20px 60px 20px;
  @media (max-width: 768px) {
    min-width: 420px;
    min-height: 210px;
    height: fit-content;
    width: auto;
    padding: 50px 10px 75px 10px;
  }

  @media (max-width: 480px) {
    min-width: 420px;
    min-height: 210px;
    height: fit-content;
    width: auto;
    padding: 50px 10px 75px 10px;
  }
}

.closeButton {
  position: absolute;
  top: -4px;
  right: -2px;
  background: none;
  color: rgb(128, 128, 128, 1);
  border: none;
  font-size: 1.7rem;
  cursor: pointer;
  z-index: 222;
}

.miniBoard {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(5, 1fr);
  width: 100%; /* Adjust width to fit modal */
  height: 100%; /* Adjust height to fit modal */
  margin: 0 auto;
  position: relative;
  z-index: 1; /* Ensure the miniBoard is above the background */
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.8), 0 6px 20px rgba(0, 0, 0, 0.5);
  @media (max-width: 768px) {
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(5, 1fr);
  }

  @media (max-width: 480px) {
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(5, 1fr);
  }
  /* Add box-shadow */
}

.miniSquare {
  width: 100%;
  height: 100%;
  background-size: 1200px 600px; /* Ensure the image covers the entire grid */
  background-repeat: no-repeat;
  // border: 1px solid rgba(255, 255, 255, 0.5); /* Add a light border */
  cursor: pointer;

  @media (max-width: 768px) {
    background-size: 420px 210px;
  }

  @media (max-width: 480px) {
    background-size: 420px 210px;
  }
}
.miniSquareInner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
  @media (max-width: 768px) {
    // border: 1px solid rgba(128, 128, 128, 0.5);
  }

  @media (max-width: 480px) {
    // border: 1px solid rgba(128, 128, 128, 0.5);
  }
}

.flipped .miniSquareInner {
  transform: rotateY(180deg); // Flip to back
}

.miniSquareFront,
.miniSquareBack {
  position: absolute;
  width: 100%;
  height: 100%; // Add 1% to prevent a gap between the front and back
  backface-visibility: hidden;

}

.miniSquareFront {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  font-weight: bold;
  background-color: white; // Ensure the front side has a background color
}

.miniSquareBack {
  background-size: 1200px 600px; // Ensure the background size covers the entire grid
  transform: rotateY(180deg);
  @media (max-width: 768px) {
    background-size: 420px 210px;
  }
  @media (max-width: 480px) {
    background-size: 420px 210px;
  }
}

.disabled {
  background-color: transparent;
}
