@keyframes modalBounceIn {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes modalBounceOut {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0;
    transform: scale(0.8);
  }
}

.modal {
  display: none; /* Hidden by default */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  z-index: 1000;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.modal.show {
  display: flex; /* Show the modal when the class 'show' is added */
  animation: modalBounceIn 0.5s ease-out;
}

.modal.hide {
  animation: modalBounceOut 0.5s ease-out;
}

.modalContent {
  background-color: white;
  width: 500px; /* Set modal width */
  height: 500px; /* Set modal height */
  padding: 20px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  position: relative;
  padding: 25px 20px 60px 20px;
}

.closeButton {
  position: absolute;
  top: -4px;
  right: -2px;
  background: none;
  border: none;
  font-size: 1.7rem;
  cursor: pointer;
}

.miniBoard {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(4, 1fr);
  width: 100%; /* Adjust width to fit modal */
  height: 100%; /* Adjust height to fit modal */
  margin: 0 auto;
  position: relative;
  z-index: 1; /* Ensure the miniBoard is above the background */
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.8), 0 6px 20px rgba(0, 0, 0, 0.5);

  .disabled {
    background-color: salmon !important;
  } /* Add box-shadow */
}

.miniSquare {
  width: 100%;
  height: 100%;
  background-size: 500px 500px; /* Ensure the image covers the entire grid */
  background-repeat: no-repeat;
  border: 1px solid rgba(255, 255, 255, 0.5); /* Add a light border */
  cursor: pointer;
}
.miniSquareInner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.flipped .miniSquareInner {
  transform: rotateY(180deg); // Flip to back
}

.miniSquareFront,
.miniSquareBack {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.miniSquareFront {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  font-weight: bold;
  background-color: white; // Ensure the front side has a background color
}

.miniSquareBack {
  background-size: 500px 500px; // Ensure the background size covers the entire grid
  transform: rotateY(180deg);
}
